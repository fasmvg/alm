#!/usr/bin/env ruby

require "alm"
require "optparse"

options = {}
parser = OptionParser.new do |opts|
  opts.banner = "Usage: alm --add <file> | --remove <file>"

  opts.on("--add <file>", "Adds and grants permissions to an AppImage file to run system-wide") do |file|
    options[:action] = :add
    options[:file] = file
  end

  opts.on("--remove <file>", "Removes an added AppImage file") do |file|
    options[:action] = :remove
    options[:file] = file
  end

  opts.on("-h", "--help", "Show this help message") do
    puts opts
    exit
  end
end

begin
  parser.parse!
rescue OptionParser::InvalidOption => e
  puts "\e[31m[ERROR | OPT_PARSER] - alm: #{e.message}\e[0m"
  puts parser
  exit 1
end

# Post-Processing Verification (PPV)
unless options[:file]
  puts "\e[31m[ERROR | PPV] - alm: No file passed\n\e[0m"
  puts parser
  exit 1
end

file = options[:file]
file_path = File.expand_path(file, Dir.pwd)

case options[:action]
when :add
  # ADD VERIFICATION PROCESS
  avp_verification = Verifications::AVP.process(file_path)
  case avp_verification
  when :AVP_PPR
    Modules::ADD.start([file])
  when :AVP_NEXIST
    puts "\e[31m[ERROR | AVP_NEXIST ] - alm: The file #{file} was NOT found in the current directory\e[0m"
  when :AVP_NAPPIMG
    puts "\e[31m[ERROR | AVP_NAPPIMG] - alm: The passed file is NOT an .AppImage file\e[0m"
  else
    puts "\e[31m[ERROR | AVP_FAILED ] - alm: AVP Verification failed unexpectedly\e[0m"
  end
when :remove
  # REMOVE VERIFICATION PROCESS
  rvp_verification = Verifications::RVP.process(file_path)
  case rvp_verification
  when :RVP_PPR
    Modules::REMOVE.start([file])
  when :RVP_NEXIST
    puts "\e[31m[ERROR | RVP_NEXIST ] - alm: File #{file} not found in #{file_path}\e[0m"
  else
    puts "\e[31m[ERROR | RVP_FAILED ] - alm: RVP Verification failed unexpectedly\e[0m"
  end
else
  puts "\e[31m[ERROR | CMD] - alm: No valid action (--add or --remove) provided\e[0m"
  puts parser
  exit 1
end
